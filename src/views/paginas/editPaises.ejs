<body>
    <h1>Editar Héroe</h1>

    <div class="form-container">
        <form id="editarHeroeForm">
            <input type="hidden" name="id" value="<%= datosHeroe._id %>"><!--Uso un campo oculto para simular PUT-->
            
           
            <label for="nombreSuperHeroe">Nombre del Superhéroe:</label>
            <input type="text" id="nombreSuperHeroe" name="nombreSuperHeroe" value="<%= datosHeroe.nombreSuperHeroe %>" required>

            <label for="nombreReal">Nombre Real:</label>
            <input type="text" id="nombreReal" name="nombreReal" value="<%= datosHeroe.nombreReal %>" required>

            <label for="edad">Edad:</label>
            <input type="number" id="edad" name="edad" value="<%= datosHeroe.edad %>" min="0" required>

            <label for="planetaOrigen">Planeta de Origen:</label>
            <input type="text" id="planetaOrigen" name="planetaOrigen" value="<%= datosHeroe.planetaOrigen %>" required>

            <label for="debilidad">Debilidad:</label>
            <input type="text" id="debilidad" name="debilidad" value="<%= datosHeroe.debilidad %>">

            <label for="poderes">Poderes (separados por comas):</label>
            <textarea id="poderes" name="poderes"><%= datosHeroe.poderes.join(', ') %></textarea>

            <label for="aliados">Aliados (separados por comas):</label>
            <textarea id="aliados" name="aliados"><%= datosHeroe.aliados.join(', ') %></textarea>

            <label for="enemigos">Enemigos (separados por comas):</label>
            <textarea id="enemigos" name="enemigos"><%= datosHeroe.enemigos.join(', ') %></textarea>

            <label for="CargadoPor">Cargado por:</label>
            <input type="text" id="cargadoPor" name="CargadoPor" value="<%= datosHeroe.CargadoPor %>" required>

            <button type="submit">Guardar Cambios</button>

            <div id="formMessage"></div>
        </form>
    </div>

    <script>
        // Obténer el formulario
        const form = document.getElementById('editarHeroeForm');
        const messageDiv = document.getElementById('formMessage');

        // Escucha el evento de envío del formulario
        form.addEventListener('submit', async (event) => {
            event.preventDefault();  // Prevenir el envío normal del formulario
            
            // Obténgo los datos del formulario
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            // Realiza la solicitud PUT utilizando fetch
            const response = await fetch('/api/heroes/editarHeroe', {
                method: 'PUT',  // Especifica que el método es PUT
                headers: {
                    'Content-Type': 'application/json',  // Enviamos los datos como JSON
                },
                body: JSON.stringify(data),  // Convertimos los datos del formulario a JSON
            });

            // Maneja la respuesta del servidor
            if (response.ok) {
                messageDiv.innerHTML = '<p class="success-message">Héroe actualizado correctamente</p>';
                window.location.href = "/api/heroes";

               
            } else {
                messageDiv.innerHTML = '<p class="error-message">Error al actualizar héroe</p>';
            } 
        });
    </script>
</body>